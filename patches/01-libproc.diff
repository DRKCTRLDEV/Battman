--- a/libtextstyle/lib/get_ppid_of.c	2024-01-06 03:04:14.000000000 +0800
+++ b/libtextstyle/lib/get_ppid_of.c	2025-01-25 17:43:44.000000000 +0800
@@ -38,7 +38,54 @@
    MAC_OS_X_VERSION_MIN_REQUIRED <= version <= MAC_OS_X_VERSION_MAX_ALLOWED.  */
 # include <AvailabilityMacros.h>
 # if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
-#  include <libproc.h>
+#  if __has_include(<libproc.h>)
+#   include <libproc.h>
+#  else
+struct proc_bsdinfo {
+        uint32_t                pbi_flags;              /* 64bit; emulated etc */
+        uint32_t                pbi_status;
+        uint32_t                pbi_xstatus;
+        uint32_t                pbi_pid;
+        uint32_t                pbi_ppid;
+        uid_t                   pbi_uid;
+        gid_t                   pbi_gid;
+        uid_t                   pbi_ruid;
+        gid_t                   pbi_rgid;
+        uid_t                   pbi_svuid;
+        gid_t                   pbi_svgid;
+        uint32_t                rfu_1;                  /* reserved */
+        char                    pbi_comm[16];
+        char                    pbi_name[2 * 16];  /* empty if no name is registered */
+        uint32_t                pbi_nfiles;
+        uint32_t                pbi_pgid;
+        uint32_t                pbi_pjobc;
+        uint32_t                e_tdev;                 /* controlling tty dev */
+        uint32_t                e_tpgid;                /* tty process group id */
+        int32_t                 pbi_nice;
+        uint64_t                pbi_start_tvsec;
+        uint64_t                pbi_start_tvusec;
+};
+struct proc_bsdshortinfo {
+    uint32_t                pbsi_pid;               /* process id */
+    uint32_t                pbsi_ppid;              /* process parent id */
+    uint32_t                pbsi_pgid;              /* process perp id */
+    uint32_t                pbsi_status;            /* p_stat value, SZOMB, SRUN, etc */
+    char                    pbsi_comm[16];   /* upto 16 characters of process name */
+    uint32_t                pbsi_flags;              /* 64bit; emulated etc */
+    uid_t                   pbsi_uid;               /* current uid on process */
+    gid_t                   pbsi_gid;               /* current gid on process */
+    uid_t                   pbsi_ruid;              /* current ruid on process */
+    gid_t                   pbsi_rgid;              /* current tgid on process */
+    uid_t                   pbsi_svuid;             /* current svuid on process */
+    gid_t                   pbsi_svgid;             /* current svgid on process */
+    uint32_t                pbsi_rfu;               /* reserved for future use*/
+};
+
+#define PROC_PIDTBSDINFO       3
+#define PROC_PIDT_SHORTBSDINFO 13
+
+extern int proc_pidinfo (int, int, uint64_t, void *, int) WEAK_IMPORT_ATTRIBUTE;
+#  endif
 #  if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
 /* Mac OS X versions < 10.5 don't have this function.  Therefore declare it as
    weak, in order to avoid a runtime error when the binaries are run on these
--- a/libtextstyle/lib/get_progname_of.c	2024-01-06 03:04:14.000000000 +0800
+++ b/libtextstyle/lib/get_progname_of.c	2025-01-25 17:46:10.000000000 +0800
@@ -46,7 +46,54 @@
    MAC_OS_X_VERSION_MIN_REQUIRED <= version <= MAC_OS_X_VERSION_MAX_ALLOWED.  */
 # include <AvailabilityMacros.h>
 # if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
-#  include <libproc.h>
+#  if __has_include(<libproc.h>)
+#   include <libproc.h>
+#  else
+struct proc_bsdinfo {
+        uint32_t                pbi_flags;              /* 64bit; emulated etc */
+        uint32_t                pbi_status;
+        uint32_t                pbi_xstatus;
+        uint32_t                pbi_pid;
+        uint32_t                pbi_ppid;
+        uid_t                   pbi_uid;
+        gid_t                   pbi_gid;
+        uid_t                   pbi_ruid;
+        gid_t                   pbi_rgid;
+        uid_t                   pbi_svuid;
+        gid_t                   pbi_svgid;
+        uint32_t                rfu_1;                  /* reserved */
+        char                    pbi_comm[16];
+        char                    pbi_name[2 * 16];  /* empty if no name is registered */
+        uint32_t                pbi_nfiles;
+        uint32_t                pbi_pgid;
+        uint32_t                pbi_pjobc;
+        uint32_t                e_tdev;                 /* controlling tty dev */
+        uint32_t                e_tpgid;                /* tty process group id */
+        int32_t                 pbi_nice;
+        uint64_t                pbi_start_tvsec;
+        uint64_t                pbi_start_tvusec;
+};
+struct proc_bsdshortinfo {
+    uint32_t                pbsi_pid;               /* process id */
+    uint32_t                pbsi_ppid;              /* process parent id */
+    uint32_t                pbsi_pgid;              /* process perp id */
+    uint32_t                pbsi_status;            /* p_stat value, SZOMB, SRUN, etc */
+    char                    pbsi_comm[16];   /* upto 16 characters of process name */
+    uint32_t                pbsi_flags;              /* 64bit; emulated etc */
+    uid_t                   pbsi_uid;               /* current uid on process */
+    gid_t                   pbsi_gid;               /* current gid on process */
+    uid_t                   pbsi_ruid;              /* current ruid on process */
+    gid_t                   pbsi_rgid;              /* current tgid on process */
+    uid_t                   pbsi_svuid;             /* current svuid on process */
+    gid_t                   pbsi_svgid;             /* current svgid on process */
+    uint32_t                pbsi_rfu;               /* reserved for future use*/
+};
+
+#define PROC_PIDTBSDINFO       3
+#define PROC_PIDT_SHORTBSDINFO 13
+
+extern int proc_pidinfo (int, int, uint64_t, void *, int) WEAK_IMPORT_ATTRIBUTE;
+#  endif
 #  if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
 /* Mac OS X versions < 10.5 don't have this function.  Therefore declare it as
    weak, in order to avoid a runtime error when the binaries are run on these
